{"version":3,"sources":["components/Preloader/index.jsx","components/Layout/index.jsx","components/ErrorMessage/index.jsx","pages/ErrorPage/index.jsx","components/AbilityInfo/index.jsx","app/axiosConfig.js","actions/app.js","components/GoBackButton/index.jsx","pages/AbilityPage/index.jsx","components/PokemonCard/index.jsx","components/PokemonsList/index.jsx","components/Search/index.jsx","pages/PokemonListPage/index.jsx","common/helpers.js","common/constants.js","components/StatsList/index.jsx","components/AbilitiesList/index.jsx","components/PokemonInfo/index.jsx","pages/PokemonPage/index.jsx","pages/NotFoundPage/index.jsx","app/Router.jsx","app/App.jsx","app/history.js","reducers/appReducer.js","reducers/index.js","app/store.js","serviceWorker.js","index.js"],"names":["Preloader","Dimmer","active","inverted","page","Loader","size","Layout","children","Container","className","Grid","Column","ErrorMessage","header","text","Message","icon","Icon","name","loading","Content","Header","to","ErrorPage","AbilityInfo","ability","List","effect_entries","map","effect","short_effect","Item","key","shortid","generate","axios","axiosBase","create","baseURL","process","timeout","headers","setLoading","value","type","payload","setFailedRequest","loadPokemons","dispatch","offset","a","get","results","data","Promise","resolve","reject","loadPokemonDetailedInfo","id","loadAbilityInfo","withRouter","goBack","history","Button","onClick","AbilityPage","useDispatch","useSelector","app","abilityInfo","useParams","useEffect","Segment","PokemonCard","Card","as","Link","Image","src","wrapped","ui","PokemonsList","pokemons","Group","centered","index","Search","setSearchKey","Input","placeholder","onChange","target","fluid","PokemonListPage","useState","setOffset","searchKey","pokemonsToRender","filter","toLowerCase","startsWith","filterPokemons","isEmptySearchResult","isEmpty","Row","StatsList","stats","stat","base_stat","content","AbilitiesList","abilities","PokemonInfo","pokemon","sprites","front_default","back_default","front_shiny","back_shiny","propTypes","PropTypes","object","isRequired","PokemonPage","pokemonInfo","NotFoundPage","Router","path","exact","component","App","isLoading","isError","createBrowserHistory","initialState","appReady","rootReducer","combineReducers","state","concat","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.632800aa.chunk.js","sourcesContent":["import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nconst Preloader = () => (\n  <Dimmer active inverted page>\n    <Loader size=\"huge\" inverted>\n      Loading...\n    </Loader>\n  </Dimmer>\n);\n\nexport { Preloader };\n","import React from 'react';\n\nimport { Container, Grid } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst Layout = ({ children }) => {\n  return (\n    <Container className=\"layout\">\n      <Grid>\n        <Grid.Column>{children}</Grid.Column>\n      </Grid>\n    </Container>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { Layout };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Message, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst ErrorMessage = ({ header, text }) => (\n  <Message size=\"huge\" icon>\n    <Icon name=\"circle notched\" loading />\n    <Message.Content>\n      <Message.Header>{header}</Message.Header>\n      {text}\n      <Link to=\"/\"> You can return to main page.</Link>\n    </Message.Content>\n  </Message>\n);\n\nErrorMessage.propTypes = {\n  header: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport { ErrorMessage };\n","import React from 'react';\n\nimport { Layout } from '../../components/Layout';\nimport { ErrorMessage } from '../../components/ErrorMessage';\n\nconst ErrorPage = () => (\n  <Layout>\n    <ErrorMessage\n      header=\"Error message\"\n      text=\"An error occurred while accessing the server.\"\n    />\n  </Layout>\n);\n\nexport { ErrorPage };\n","import React from 'react';\nimport { List } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nconst AbilityInfo = ({ ability }) => {\n  return (\n    <List>\n      {ability.effect_entries.map(({ effect, short_effect }) => {\n        return (\n          <List.Item key={shortid.generate()}>\n            <List.Content>{effect}</List.Content>\n            <List.Content>{short_effect}</List.Content>\n          </List.Item>\n        );\n      })}\n    </List>\n  );\n};\n\nAbilityInfo.propTypes = {\n  ability: PropTypes.object.isRequired,\n};\n\nexport { AbilityInfo };\n","// eslint-disable-next-line import/no-named-default\nimport { default as axiosBase } from 'axios';\n\nexport const axios = axiosBase.create({\n  baseURL: process.env.REACT_APP_POKEMONS_API_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n    'X-Requested-With': 'XMLHttpRequest',\n  },\n});\n","import { axios } from '../app/axiosConfig';\n\nexport const CLEAR_POKEMONS_LIST = 'CLEAR_POKEMONS_LIST';\nexport const SET_ABILITY_INFO = 'SET_ABILITY_INFO';\nexport const SET_POKEMONS_LIST = 'SET_POKEMONS_LIST';\nexport const SET_POKEMON_DETAILED_INFO = 'SET_POKEMON_DETAILED_INFO';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_FAILED_REQUEST = 'SET_FAILED_REQUEST';\n\nexport const clearPokemosList = () => ({\n  type: CLEAR_POKEMONS_LIST,\n});\n\nexport const setLoading = (value) => ({\n  type: SET_LOADING,\n  payload: value,\n});\n\nexport const setFailedRequest = (value) => ({\n  type: SET_FAILED_REQUEST,\n  payload: value,\n});\n\nexport const setPokemonsList = (pokemons) => ({\n  type: SET_POKEMONS_LIST,\n  payload: pokemons,\n});\n\nexport const setPokemonDetailedInfo = (detailedInfo) => ({\n  type: SET_POKEMON_DETAILED_INFO,\n  payload: detailedInfo,\n});\n\nexport const setAbilityInfo = (abilityInfo) => ({\n  type: SET_ABILITY_INFO,\n  payload: abilityInfo,\n});\n\nexport const loadPokemons = async (dispatch, offset) => {\n  dispatch(setLoading(true));\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/pokemon?limit=20&offset=${offset}`);\n    dispatch(setPokemonsList(results));\n    dispatch(setFailedRequest(false));\n    return Promise.resolve(results);\n  } catch (e) {\n    dispatch(setFailedRequest(true));\n    return Promise.reject(e);\n  } finally {\n    dispatch(setLoading(false));\n  }\n};\n\nexport const loadPokemonDetailedInfo = async (dispatch, id) => {\n  dispatch(setLoading(true));\n  try {\n    const { data } = await axios.get(`/pokemon/${id}`);\n    dispatch(setPokemonDetailedInfo(data));\n    dispatch(setFailedRequest(false));\n    return Promise.resolve(data);\n  } catch (e) {\n    dispatch(setFailedRequest(true));\n    return Promise.reject(e);\n  } finally {\n    dispatch(setLoading(false));\n  }\n};\n\nexport const loadAbilityInfo = async (dispatch, id) => {\n  dispatch(setLoading(true));\n  try {\n    const { data } = await axios.get(`/ability/${id}`);\n    dispatch(setAbilityInfo(data));\n    dispatch(setFailedRequest(false));\n    return Promise.resolve(data);\n  } catch (e) {\n    dispatch(setFailedRequest(true));\n    return Promise.reject(e);\n  } finally {\n    dispatch(setLoading(false));\n  }\n};\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Button } from 'semantic-ui-react';\n\nconst GoBackButton = ({ history: { goBack } }) => {\n  return <Button icon=\"angle left\" onClick={goBack} />;\n};\n\nexport default withRouter(GoBackButton);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Segment } from 'semantic-ui-react';\n\nimport { Layout } from '../../components/Layout';\nimport { AbilityInfo } from '../../components/AbilityInfo';\nimport { loadAbilityInfo } from '../../actions/app';\nimport GoBackButton from '../../components/GoBackButton';\n\nconst AbilityPage = () => {\n  const dispatch = useDispatch();\n  const ability = useSelector(({ app: { abilityInfo } }) => abilityInfo);\n  const { id } = useParams();\n\n  useEffect(() => {\n    loadAbilityInfo(dispatch, id);\n  }, [dispatch, id]);\n\n  return (\n    <Layout>\n      {ability && (\n        <Segment size=\"big\">\n          <GoBackButton />\n          <h1>{id}</h1>\n          <AbilityInfo ability={ability} />\n        </Segment>\n      )}\n    </Layout>\n  );\n};\n\nexport { AbilityPage };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Image } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst PokemonCard = ({ name, id }) => (\n  <Card to={`/pokemon/${name}`} as={Link}>\n    <Image\n      src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\n      wrapped\n      ui={false}\n    />\n    <Card.Content>\n      <Card.Header>{name}</Card.Header>\n    </Card.Content>\n  </Card>\n);\n\nPokemonCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n\nexport { PokemonCard };\n","import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport shortid from 'shortid';\n\nimport { PokemonCard } from '../PokemonCard';\nimport PropTypes from 'prop-types';\n\nconst PokemonsList = ({ pokemons }) => {\n  return (\n    <Card.Group className=\"pokemos-list\" centered>\n      {pokemons.map(({ name }, index) => (\n        <PokemonCard key={shortid.generate()} id={index + 1} name={name} as />\n      ))}\n    </Card.Group>\n  );\n};\n\nPokemonsList.propTypes = {\n  pokemons: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport { PokemonsList };\n","import React from 'react';\nimport { Input } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({ setSearchKey }) => {\n  const handleSearch = ({ target: { value } }) => {\n    setSearchKey(value);\n  };\n\n  return (\n    <Input\n      className=\"search-input\"\n      placeholder=\"Search...\"\n      onChange={handleSearch}\n      fluid\n    />\n  );\n};\n\nSearch.propTypes = {\n  setSearchKey: PropTypes.func.isRequired,\n};\n\nexport { Search };\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Grid, Message } from 'semantic-ui-react';\nimport { isEmpty } from 'lodash';\n\nimport { Layout } from '../../components/Layout';\nimport { PokemonsList } from '../../components/PokemonsList';\nimport { Search } from '../../components/Search';\n\nimport { clearPokemosList, loadPokemons } from '../../actions/app';\nimport { filterPokemons } from '../../common/helpers';\nimport { INCRIMENT_OFFSET } from '../../common/constants';\n\nconst PokemonListPage = () => {\n  const dispatch = useDispatch();\n  const [offset, setOffset] = useState(0);\n  const [searchKey, setSearchKey] = useState('');\n\n  useEffect(() => {\n    dispatch(clearPokemosList());\n  }, [dispatch]);\n\n  useEffect(() => {\n    loadPokemons(dispatch, offset);\n  }, [dispatch, offset]);\n\n  const handleLoadMore = () => {\n    setOffset(offset + INCRIMENT_OFFSET);\n  };\n\n  const pokemons = useSelector(({ app: { pokemons } }) => pokemons);\n  const pokemonsToRender = searchKey\n    ? filterPokemons(pokemons, searchKey)\n    : pokemons;\n  const isEmptySearchResult = searchKey && isEmpty(pokemonsToRender);\n\n  return (\n    <Layout>\n      <Grid centered>\n        <Grid.Row>\n          <Search setSearchKey={setSearchKey} />\n        </Grid.Row>\n      </Grid>\n      {isEmptySearchResult ? (\n        <Message>Nothing found</Message>\n      ) : (\n        <PokemonsList pokemons={pokemonsToRender} />\n      )}\n      {!searchKey && (\n        <Grid centered>\n          <Grid.Row>\n            <Button onClick={handleLoadMore}>Load more</Button>\n          </Grid.Row>\n        </Grid>\n      )}\n    </Layout>\n  );\n};\n\nexport { PokemonListPage };\n","export const filterPokemons = (pokemons, key) => {\n  return pokemons.filter(({ name }) =>\n    name.toLowerCase().startsWith(key.toLowerCase())\n  );\n};\n","export const INCRIMENT_OFFSET = 20;\n","import React from 'react';\nimport { List } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nconst StatsList = ({ stats }) => {\n  return (\n    <List>\n      {stats.map(({ stat, base_stat }) => (\n        <List.Item\n          key={shortid.generate()}\n          content={`${stat.name} ${base_stat}`}\n        />\n      ))}\n    </List>\n  );\n};\n\nStatsList.propTypes = {\n  stats: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport { StatsList };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nconst AbilitiesList = ({ abilities }) => {\n  return (\n    <List>\n      {abilities.map(({ ability: { name } }) => (\n        <List.Item\n          to={`/ability/${name}`}\n          key={shortid.generate()}\n          content={name}\n          as={Link}\n        />\n      ))}\n    </List>\n  );\n};\n\nAbilitiesList.propTypes = {\n  abilities: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport { AbilitiesList };\n","import React from 'react';\nimport { Grid, Image } from 'semantic-ui-react';\n\nimport { StatsList } from '../StatsList';\nimport { AbilitiesList } from '../AbilitiesList';\nimport PropTypes from 'prop-types';\n\nconst PokemonInfo = ({\n  pokemon: {\n    abilities,\n    stats,\n    sprites: { front_default, back_default, front_shiny, back_shiny },\n  },\n}) => {\n  return (\n    <>\n      <h1>Sprites</h1>\n      <Grid>\n        <Grid.Row>\n          <Image src={front_default} size=\"tiny\" />\n          <Image src={back_default} size=\"tiny\" />\n          <Image src={front_shiny} size=\"tiny\" />\n          <Image src={back_shiny} size=\"tiny\" />\n        </Grid.Row>\n      </Grid>\n      <h2>Stast info:</h2>\n      <StatsList stats={stats} />\n      <h2>Abilities:</h2>\n      <AbilitiesList abilities={abilities} />\n    </>\n  );\n};\n\nAbilitiesList.propTypes = {\n  pokemon: PropTypes.object.isRequired,\n};\n\nexport { PokemonInfo };\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Segment } from 'semantic-ui-react';\n\nimport { Layout } from '../../components/Layout';\nimport { PokemonInfo } from '../../components/PokemonInfo';\nimport { loadPokemonDetailedInfo } from '../../actions/app';\nimport GoBackButton from '../../components/GoBackButton';\n\nconst PokemonPage = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const pokemon = useSelector(({ app: { pokemonInfo } }) => pokemonInfo);\n\n  useEffect(() => {\n    loadPokemonDetailedInfo(dispatch, id);\n  }, [dispatch, id]);\n\n  return (\n    <Layout>\n      {pokemon && (\n        <Segment>\n          <GoBackButton />\n          <PokemonInfo pokemon={pokemon} />\n        </Segment>\n      )}\n    </Layout>\n  );\n};\n\nexport { PokemonPage };\n","import React from 'react';\n\nimport { Layout } from '../../components/Layout';\nimport { ErrorMessage } from '../../components/ErrorMessage';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <ErrorMessage\n      header=\"Page not found\"\n      text=\"You may have made a mistake when going to the page.\"\n    />\n  </Layout>\n);\n\nexport { NotFoundPage };\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { AbilityPage } from '../pages/AbilityPage';\nimport { PokemonListPage } from '../pages/PokemonListPage';\nimport { PokemonPage } from '../pages/PokemonPage';\nimport { NotFoundPage } from '../pages/NotFoundPage';\n\nconst Router = () => (\n  <Switch>\n    <Route path=\"/\" exact component={PokemonListPage} />\n    <Route path=\"/pokemon/:id\" component={PokemonPage} />\n    <Route path=\"/ability/:id\" component={AbilityPage} />\n    <Route component={NotFoundPage} />\n  </Switch>\n);\n\nexport { Router };\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Preloader } from '../components/Preloader';\nimport { ErrorPage } from '../pages/ErrorPage';\n\nimport { Router } from './Router';\n\nconst App = () => {\n  const isLoading = useSelector(({ app: { isLoading } }) => isLoading);\n  const isError = useSelector(({ app: { isError } }) => isError);\n\n  return (\n    <>\n      <Router />\n      {isLoading && <Preloader />}\n      {isError && <ErrorPage />}\n    </>\n  );\n};\n\nexport { App };\n","import { createBrowserHistory } from 'history';\nexport const history = createBrowserHistory();\n","import {\n  SET_ABILITY_INFO,\n  CLEAR_POKEMONS_LIST,\n  SET_LOADING,\n  SET_FAILED_REQUEST,\n  SET_POKEMON_DETAILED_INFO,\n  SET_POKEMONS_LIST,\n} from '../actions/app';\n\nconst initialState = {\n  pokemons: [],\n  pokemonInfo: null,\n  abilityInfo: null,\n  appReady: false,\n  isLoading: false,\n  isError: false,\n};\n\nconst appReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CLEAR_POKEMONS_LIST:\n      return {\n        ...state,\n        pokemons: [],\n      };\n\n    case SET_POKEMONS_LIST:\n      return {\n        ...state,\n        pokemons: state.pokemons.concat(payload),\n      };\n\n    case SET_POKEMON_DETAILED_INFO:\n      return {\n        ...state,\n        pokemonInfo: payload,\n      };\n\n    case SET_ABILITY_INFO:\n      return {\n        ...state,\n        abilityInfo: payload,\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        isLoading: payload,\n      };\n\n    case SET_FAILED_REQUEST:\n      return {\n        ...state,\n        isError: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { appReducer };\n","import { combineReducers } from 'redux';\n\nimport { appReducer } from './appReducer';\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n});\n\nexport { rootReducer };\n","import thunk from 'redux-thunk';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\n\nimport { rootReducer } from '../reducers';\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport { store };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { App } from './app/App';\nimport { history } from './app/history';\nimport { store } from './app/store';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './scss/assets.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter history={history}>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}